特点：
=====
1、存储模式
CVS/SVN/VSS
集中式管理：代码仓库必须要依赖于一台中央服务器和网络的介入——安全性和操作性较差（大家共享一台代码服务器）

GIT
分布式管理：代码仓库可以随意复制在任何位置（U盘，磁盘，网络服务器）——安全性和操作性较好（每一个代码仓库都是独立的）

2、管理模式
代码分由三个阶段去维护（可以轻松实现文件的快照/镜像、比较和索引维护）

 分区        状态               操作
工作区    Untracked（未跟踪）   需要加入暂存——通过命令add
暂存区    Staged（已暂存）      需要提交仓库——通过命令commit
仓库区    Commited（已提交）

----------------------------------------------------------------------------------

查看版本
git --version

查看常用命令
git --help

查看所有命令
git help -a（按q退出）

查看某个命令具体帮助（例如查看提交命令）
git help commit
git commit --help

-----------------------------------------------------------------------------

将源码所在目录初始化为一个代码仓库
cd进入到源码所在目录
git init（会创建一个.git文件夹，该文件夹是隐藏的，这个里面就是仓库，通过dir /ah查看）

查看当前工作区的文件状态（哪些文件尚未暂存，哪些文件被暂存但尚未提交，哪些文件被修改、重命名、移除）
git status
红色：尚未被暂存
绿色：已经被暂存（尚未被提交）

取消被暂存的文件（因为可能还要继续编辑，代码没写完）
git rm --cached style.css

有些二进制文件、大文件、临时文件、备份文件、或者不需要被仓库管理的文件
可以把它们列入一个忽略列表中，这样git status就不会总是以红色提醒这些文件尚未暂存
1、创建忽略列表文件(在仓库根目录下，文件名为：.gitignore)
2、在此文件中，每行一条要被忽略的文件名

注意：只有绿色的文件/目录，在commit提交时，才会被写入仓库！

-----------------------------------------------------------------------

设置当前仓库的提交用户（姓名和邮箱）
git config user.email "yufeng@163.com"
git config user.name "yufeng"

查看当前仓库的提交用户
git config user.email
git config user.name

或者
git config --global user.name "itany"
git config --global user.email "itany@163.com"
查看全局的提交用户
git config --global user.email
git config --global user.name

git config --global -l

全局仓库的提交用户（当前主机上的所有仓库都共享的姓名和邮箱）
在当前仓库没有设置提交用户时，就使用全局的！

--------------------------------------------------------------------------------

commit就是将所有暂存区内容写入仓库区（不能再检出某些提交）





